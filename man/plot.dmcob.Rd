% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.dmcob.R
\name{plot.dmcob}
\alias{plot.dmcob}
\title{plot.dmcob}
\usage{
\method{plot}{dmcob}(
  x,
  figType = "summary",
  VP = NULL,
  legend = TRUE,
  labels = c("Compatible", "Incompatible"),
  cols = c("green", "red"),
  errorBars = FALSE,
  errorBarType = "sd",
  ylimRt = c(200, 800),
  ylimEr = c(0, 20),
  ylimCAF = c(0, 1),
  ylimDelta = c(-50, 100),
  xlimDelta = c(200, 1000),
  ...
)
}
\arguments{
\item{x}{Output from fitDMC}

\item{figType}{summary, rtCorrect, errorRate, rtErrors, cdf, caf, delta, all}

\item{VP}{NULL (aggregated data across all participants) or integer for participant number}

\item{legend}{TRUE/FALSE (or FUNCTION) plot legend on each plot}

\item{labels}{Condition labels c("Compatible", "Incompatible") default}

\item{cols}{Condition colours c("green", "red") default}

\item{errorBars}{TRUE(default)/FALSE Plot errorbars}

\item{errorBarType}{sd(default), or se}

\item{ylimRt}{ylimit for Rt plots}

\item{ylimEr}{ylimit for error rate plots}

\item{ylimCAF}{ylimit for CAF plot}

\item{ylimDelta}{ylimit for delta plot}

\item{xlimDelta}{xlimit for delta plot}

\item{...}{additional plot pars}
}
\description{
Plot results from the output of dmcSim. The plot
can be an overall summary, or individual plots (activation, trials,
pdf, cdf, caf, delta, all). Plot type summary1 contains an activation plot,
example individual trials, the probability distribution function (PDF), the
cumulative distribution function (CDF), the conditional accuracy function (CAF)
and delta plots. This required that dmcSim is run with fullData = TRUE. Plot
type summary2 contains only the PDF, CDF, CAF and delta plots and does not require
that dmcSim is run with fullData = TRUE.
}
\examples{
\dontrun{
library(DMCfun)

# Example 1 (real dataset)
plot(flankerData, cols = c("blue", "red"))
plot(flankerData, errorBars = TRUE, errorBarType = "se")
plot(flankerData, figType = "delta", errorBars = TRUE,  errorBarType = "se")

# Example 2 (real dataset)
plot(simonData)
plot(simonData, errorBars = TRUE, errorBarType = "se")
plot(simonData, figType = "delta", errorBars = TRUE, errorBarType = "sd")

# Example 3 (simulated dataset)
dat <- createDF(nVP = 50, nTrl = 50,
                design = list("Comp" = c("comp", "incomp")))
dat <- addDataDF(dat,
                 RT = list(list(c("Comp:comp"), vals = c(420, 100, 80)),
                           list(c("Comp:incomp"), vals = c(470, 100, 95))),
                 Error = list(list(c("Comp:comp"), vals = c(5, 3, 2, 1, 2)),
                         list(c("Comp:incomp"), vals = c(15, 8, 4, 2, 2))))
datOb <- dmcObservedData(dat)
plot(datOb, errorBars = TRUE, errorBarType = "sd")

# Example 4 (simulated dataset)
dat <- createDF(nVP = 50, nTrl = 50,
                design = list("Comp" = c("comp", "incomp")))
dat <- addDataDF(dat,
                 RT = list(list(c("Comp:comp"), vals = c(420, 100, 150)),
                           list(c("Comp:incomp"), vals = c(470, 100, 120))),
                 Error = list(list(c("Comp:comp"), vals = c(5, 3, 2, 1)),
                         list(c("Comp:incomp"), vals = c(15, 8, 4, 2))))
datOb <- dmcObservedData(dat, stepCAF = 25)
plot(datOb)
plot(datOb, VP = 1)
}

}
