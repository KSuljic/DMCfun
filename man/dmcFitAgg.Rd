% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dmcFitAgg.R
\name{dmcFitAgg}
\alias{dmcFitAgg}
\title{dmcFitAgg}
\usage{
dmcFitAgg(resOb, nTrl = 50000, startVals = c(20, 100, 0.5, 75, 300, 30,
  2, 3), minVals = c(10, 5, 0.1, 20, 200, 5, 1, 2), maxVals = c(30,
  300, 1, 150, 800, 100, 3, 4), fixed = c(0, 0, 0, 0, 0, 0, 0, 0),
  parScale = startVals/min(startVals), fitInitialTau = TRUE,
  stepCAF = 20, stepDelta = 5, printInputArgs = TRUE,
  printResults = FALSE)
}
\arguments{
\item{resOb}{Observed data (see flankerData1, flankerData2,
simonTask1 for data format)}

\item{nTrl}{Number of trials to use within dmcSim}

\item{startVals}{Starting values for to-be estimated parameters}

\item{minVals}{Minimum values for the to-be estimated parameters}

\item{maxVals}{Maximum values for the to-be estimated parameters}

\item{fixed}{Fix parameter to starting value}

\item{parScale}{Scalling values for the to-be estimated parameters}

\item{fitInitialTau}{TRUE/FALSE}

\item{stepCAF}{Step size for the CAF bins. For example, a step size of 20 would result
in 5 CAF bins centered on 10, 30, 50, 70, and 90\%.}

\item{stepDelta}{Step size for the Delta bins. For example, a step size of 5 would result
in 19 CAF bins positioned at 5, 10, 15, ... 85, 90, 95\%.}

\item{printInputArgs}{TRUE/FALSE}

\item{printResults}{TRUE/FALSE}
}
\value{
resTh
}
\description{
Fit theoretical data generated from dmcSim to observed data by
minimizing the root-mean-square error (RMSE) between a weighted combination
of the CAF and CDF functions.
}
\examples{
\dontrun{
library(DMCfun)

# Example 1: Flanker data from Ulrich et al. (2015)
fit <- dmcFitAgg(flankerData1)
plot(fit, flankerData1)
summary(fit)

# Example 2: Simon data from Ulrich et al. (2015)
fit <- dmcFitAgg(simonData1)
plot(fit, simonData1)
summary(fit)

# Example 3: Flanker Example Data
fit <- dmcFitAgg(flankerData2)
plot(fit, flankerData1)
summary(fit)

# Example 4: Simon Example Data
fit <- dmcFitAgg(simonData2)
plot(fit, simonData1)
summary(fit)

# Example 5: Simulated Data
dat <- createDF(nVP = 50, nTrl = 100,
                design = list("Comp" = c("comp", "incomp")))
dat <- addDataDF(dat,
                 RT = list(list(c("Comp:comp"), vals = c(510, 100, 100)),
                           list(c("Comp:incomp"), vals = c(540, 100, 120))),
                 Error = list(list(c("Comp:comp"), vals = c(3, 2, 2, 1, 1)),
                            list(c("Comp:incomp"), vals = c(25, 3, 2, 1, 1))))
datOb <- dmcObservedData(dat)
plot(datOb)
fit <- dmcFitAgg(datOb)
plot(fit, datOb)
summary(fit)

}

}
